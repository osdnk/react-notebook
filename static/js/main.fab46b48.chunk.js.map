{"version":3,"sources":["components/header/Style.js","components/header/Header.js","components/list/listItem/Style.js","components/list/listItem/ListItem.js","components/list/List.js","components/Style.js","components/App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","_templateObject","props","list","Wrapper","_templateObject2","Form","form","_templateObject3","Label","label","_templateObject4","small","FormElement","_templateObject5","Submit","input","_templateObject6","Title","h1","_templateObject7","Header","react_default","a","createElement","onSubmit","submit","type","id","value","textValue","onChange","change","dateValue","name","colorValue","Item","Style_templateObject","Row","Style_templateObject2","date","isDone","Circle","Style_templateObject3","theme","RowPair","Style_templateObject4","right","Cross","Style_templateObject5","Delete","Style_templateObject6","ListItem","color","onClick","done","role","aria-label","remove","text","List","createItem","data","map","_ref","listItem_ListItem","key","GlobalStyle","createGlobalStyle","components_Style_templateObject","GlobalStyleBody","components_Style_templateObject2","App","state","Date","toISOString","split","handleForm","e","target","_this","setState","handlePushData","preventDefault","length","newitem","push","alert","handleRemoveItem","newData","filter","item","handleIsDoneItem","forEach","Fragment","header_Header","this","list_List","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fab46b48.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n// https://coolors.co/fefeff-d6efff-fed18c-fed99b-fe654f\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: ${props => props.list ? '500px' : '300px'};\r\n    background-image: ${props => props.list ? '#fff' : 'linear-gradient(to right top, #fe654f, #fe5a42, #fd4e35, #fc4127, #fb3216)'};\r\n    color: #fff;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: ${props => props.list ? '70px 0' : null};\r\n    margin: 0 30px;\r\n    width: 1000px;\r\n    height: 100%;\r\n    min-height: 300px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n    @media (max-width: 620px) {\r\n        padding: 40px 0;\r\n    }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n    max-width: 1000px;\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: 300px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    width: ${props => (props.small ? '300px' : '100%')};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    input[type=\"text\"], input[type=\"date\"]{\r\n        width: 100%;\r\n        height: 45px;\r\n        border: none;\r\n        padding: 0 10px;\r\n        font-size: 1rem;\r\n        background-color: #fff;\r\n    }\r\n    select {\r\n        margin: 0 20px;\r\n        width: 100%;\r\n        height: 45px;\r\n        border: none;\r\n        padding: 0 10px;\r\n        font-size: 1rem;\r\n        background-color: #fff;\r\n        @media (max-width: 620px) {\r\n            margin: 0;\r\n        }\r\n    }\r\n    @media (max-width: 620px) {\r\n        width: 100%;\r\n        margin-bottom: 25px;\r\n    }\r\n`;\r\n\r\nexport const FormElement = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    min-height: 70px;\r\n    height: 100%;\r\n    flex-direction: row;\r\n    @media (max-width: 620px) {\r\n        width: 100%;\r\n    flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const Submit = styled.input`\r\n    width: 100px;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    color: #fff;\r\n    font-size: 1.5rem;\r\n    width: 100%;\r\n    height: 45px;\r\n    border: none;\r\n    padding: 0 10px;\r\n    border: 3px solid #FFf;\r\n    letter-spacing: 1px;\r\n    transition:cubic-bezier(0.455, 0.03, 0.515, 0.955) .3s;\r\n    :hover{\r\n        background-color: #fff;\r\n        color: #fd4e35;\r\n    }\r\n`;\r\nexport const Title = styled.h1`\r\n    text-align: left;\r\n    width: 100%;\r\n    margin: 5px;\r\n`;","import React from 'react';\r\nimport {\r\n    Container,\r\n    Wrapper,\r\n    Form,\r\n    Label,\r\n    FormElement,\r\n    Submit,\r\n    Title\r\n} from './Style';\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <Container>\r\n            <Wrapper>\r\n                <Form onSubmit={props.submit}>\r\n                    <Title>Add your note</Title>\r\n                    <FormElement>\r\n                        <Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"text\"\r\n                                value={props.textValue}\r\n                                onChange={props.change}\r\n                            />\r\n                        </Label>\r\n                    </FormElement>\r\n                    <FormElement>\r\n                        <Label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"date\"\r\n                                onChange={props.change}\r\n                                value={props.dateValue}\r\n                            />\r\n                        </Label>\r\n                        <Label>\r\n                            <select\r\n                                name=\"color\"\r\n                                id=\"color\"\r\n                                onChange={props.change}\r\n                                value={props.colorValue}>\r\n                                <option value=\"green\">Green</option>\r\n                                <option value=\"red\">Red</option>\r\n                                <option value=\"blue\">Blue</option>\r\n                                <option value=\"yellow\">Yellow</option>\r\n                                <option value=\"purple\">Purple</option>\r\n                                <option value=\"orange\">Orange</option>\r\n                            </select>\r\n                        </Label>\r\n                        <Label small>\r\n                            <Submit type=\"submit\" value=\"Add\" />\r\n                        </Label>\r\n                    </FormElement>\r\n                </Form>\r\n            </Wrapper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nexport const Item = styled.div`\r\n    width: 49%;\r\n    min-height: 120px;\r\n    height: 100%;\r\n    color: #000;\r\n    border: 2px solid #D6EFFF;\r\n    margin: 10px 0;\r\n    padding: 15px 30px;\r\n    @media (max-width: 770px) {\r\n        width: 100%;\r\n    }\r\n`;\r\nexport const Row = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    color: ${props => props.date ? 'gray' : '#000'};\r\n    color: ${props => props.isDone ? 'gray' : null};\r\n    text-decoration: ${props => props.isDone ? 'line-through' : null};\r\n    h4{\r\n        text-align: left;\r\n        font-weight: 400;\r\n        width: 100%;\r\n    }\r\n    @media (max-width: 410px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\nexport const Circle = styled.div`\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    background: ${props => props.theme};\r\n    position: relative;\r\n    margin: 0 20px;\r\n    ::before{\r\n        content: '';\r\n        position: absolute;\r\n        width: 10px;\r\n        height: 10px;\r\n        background-color: #fff;\r\n        border-radius: 50%;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n`;\r\n\r\nexport const RowPair = styled.div`\r\n    display: flex;\r\n    justify-content: ${props => props.right ? \"flex-end\" : \"start\"};\r\n    align-items: center;\r\n    width: 50%;\r\n    @media (max-width: 410px) {\r\n        width: 100%;\r\n        justify-content: flex-start;\r\n    }\r\n`;\r\n\r\nexport const Cross = styled.div`\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    background: #d3d3d3;\r\n    position: relative;\r\n    margin: 0 4px;\r\n    cursor: pointer;\r\n    color: #fff;\r\n    font-size: 1.6rem;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    line-height: 21px;\r\n    transition: cubic-bezier(0.645, 0.045, 0.355, 1) .2s;\r\n    :hover{\r\n        background: #939393;\r\n    }\r\n    `;\r\n\r\nexport const Delete = styled.div`\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    background: #d3d3d3;\r\n    color: #fff;\r\n    line-height: 23px;\r\n    text-align: center;\r\n    font-size: .7rem;\r\n    margin: 0 10px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    transition: cubic-bezier(0.645, 0.045, 0.355, 1) .2s;\r\n    :hover{\r\n        background: #fb3216;\r\n    }\r\n`;","import React from 'react';\r\nimport {\r\n    Item,\r\n    Row,\r\n    Circle,\r\n    RowPair,\r\n    Cross,\r\n    Delete\r\n} from './Style';\r\n\r\n\r\n\r\n/*\r\nFooter.\r\n*/\r\n\r\nconst ListItem = (props) => {\r\n    let color = props.color;\r\n    if (props.isDone) {\r\n        color = 'gray';\r\n    }\r\n    return (\r\n        <Item>\r\n            <Row date>\r\n                <RowPair>\r\n                    <p>{props.date}</p>\r\n                    <Circle theme={color} />\r\n                </RowPair>\r\n                <RowPair right>\r\n                    <Cross onClick={() => props.done(props.id)}><span role=\"img\" aria-label=\"cross\">&minus;</span></Cross>\r\n                    <Delete onClick={() => props.remove(props.id)}><span role=\"img\" aria-label=\"delete\">&#10060;</span></Delete>\r\n                </RowPair>\r\n            </Row>\r\n            <Row isDone={props.isDone}>\r\n                <h4>{props.text}</h4>\r\n            </Row>\r\n        </Item>\r\n    );\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport {\r\n    Container,\r\n    Wrapper,\r\n} from '../header/Style';\r\nimport ListItem from './listItem/ListItem';\r\n\r\n\r\nconst List = (props) => {\r\n\r\n    const data = props.data;\r\n    const createItem = data.map(({ id, text, date, color, isDone }) => {\r\n        return (\r\n            <ListItem\r\n                key={id}\r\n                id={id}\r\n                text={text}\r\n                date={date}\r\n                color={color}\r\n                remove={props.remove}\r\n                done={props.done}\r\n                isDone={isDone}\r\n            />\r\n        )\r\n    });\r\n    return (\r\n        <Container list=\"true\">\r\n            <Wrapper list=\"true\">\r\n                {createItem}\r\n            </Wrapper>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default List;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  *,*::before,*::after {\r\n    box-sizing: border-box;\r\n    font-family: 'Catamaran', sans-serif;\r\n  }\r\n`;\r\n\r\nexport const GlobalStyleBody = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    @import url('https://fonts.googleapis.com/css?family=Catamaran:400,700');\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\nimport Header from './header/Header';\nimport List from './list/List';\nimport { GlobalStyle, GlobalStyleBody } from './Style';\n\nclass App extends Component {\n  state = {\n    data: [\n      { id: 0, text: 'Go fishing in the Northwest Territories', date: '2021-11-07', color: 'red', isDone: false },\n      { id: 1, text: 'Learn to ski', date: '2019-06-15', color: 'blue', isDone: false },\n      { id: 2, text: 'Explore all 5 of Hawaii’s islands', date: '2019-11-01', color: 'green', isDone: true },\n    ],\n    textValue: '',\n    colorValue: 'green',\n    dateValue: new Date().toISOString().split(\"T\")[0],\n  }\n\n  handleForm = (e) => {\n    const type = e.target.type;\n    const value = e.target.value;\n    if (type === 'select-one') {\n      this.setState({\n        colorValue: value\n      })\n    } else if (type === 'date') {\n      this.setState({\n        dateValue: value\n      })\n    } else if (type === 'text') {\n      this.setState({\n        textValue: value\n      })\n    }\n  }\n\n  handlePushData = (e) => {\n    e.preventDefault();\n    if (this.state.textValue.length > 3) {\n      const length = this.state.data.length;\n      const data = this.state.data;\n      const newitem = { id: length + 1, text: this.state.textValue, date: this.state.dateValue, color: this.state.colorValue };\n      data.push(newitem);\n      this.setState({\n        data,\n        textValue: '',\n        colorValue: 'green',\n        dateValue: new Date().toISOString().split(\"T\")[0],\n      })\n    } else {\n      alert('Your task is to short!');\n    }\n  }\n\n  handleRemoveItem = (e) => {\n    const id = e;\n    const data = this.state.data;\n    const newData = data.filter(item => item.id !== id);\n    this.setState({\n      data: newData\n    })\n  }\n\n  handleIsDoneItem = (e) => {\n    const id = e;\n    const data = this.state.data;\n    data.forEach(item => {\n      if (item.id === id) {\n        item.isDone = !item.isDone;\n      }\n    });\n    this.setState({\n      data\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <GlobalStyle />\n        <GlobalStyleBody />\n        <Header\n          textValue={this.state.textValue}\n          dateValue={this.state.dateValue}\n          colorValue={this.state.colorValue}\n          change={this.handleForm}\n          submit={this.handlePushData}\n        />\n        <List\n          data={this.state.data}\n          remove={this.handleRemoveItem}\n          done={this.handleIsDoneItem}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}